Submatrix Sum Queries
Given a matrix of size M x N, there are large number of queries to find submatrix sums. Inputs to queries are left top 
and right bottom indexes of submatrix whose sum is to find out.

How to preprocess the matrix so that submatrix sum queries can be performed in O(1) time.

Example:

tli :  Row number of top left of query submatrix
tlj :  Column number of top left of query submatrix
rbi :  Row number of bottom right of query submatrix
rbj :  Column number of bottom right of query submatrix

Input: mat[M][N] = {{1, 2, 3, 4, 6},
                    {5, 3, 8, 1, 2},
                    {4, 6, 7, 5, 5},
                    {2, 4, 8, 9, 4} };
Query1: tli = 0, tlj = 0, rbi = 1, rbj = 1
Query2: tli = 2, tlj = 2, rbi = 3, rbj = 4
Query3: tli = 1, tlj = 2, rbi = 3, rbj = 3;

Output:
Query1: 11  // Sum between (0, 0) and (1, 1)
Query2: 38  // Sum between (2, 2) and (3, 4)
Query3: 38  // Sum between (1, 2) and (3, 3)

   //ABCDEFGHIJ
       //A BCDEFGHIJ
       //AB CDEFGHIJ
       //ABC DEFGHIJ
       //ABCD EFGHIJ ..
       //----------------
       //ABC D E F G H I J
       //A BCD E F G H I J
       //A B CDE F G H I J 
       //  ..
       //A B C D E F G HIJ
       
       //AB C D E F G H I J
       //A BC D E F G H I J
       //A B CD E F G H I J 
       //  ..
       //A B C D E F G H IJ 
       //A B C D E F G H I J
       
       

 		 1            
		/ \
       2   3      
      /\   / \		  
     4  55    6   7	
	/   / \   / \   \
    9   30 88 8  10  11
    
    
    1,  
    3,2
    3,4,55
    3,4,30,88
    
    
 0 1 2 3 4 5 6 7 8  9
[2,3,1,4,8,7,8,9,10,6]

2i+1 , 2i+2
0 - 1,2
1 - 3,4
2 - 5,6
3 - 7,8
4 - 9,(10)

heap_size=10. (10-1)/2 =4. 

Print all elements in sorted order from row and column wise sorted matrix
Given an n x n matrix, where every row and column is sorted in non-decreasing order. Print all elements of matrix in sorted order.

Example:

Input: mat[][]  =  { {10, 20, 30, 40},
                     {15, 25, 35, 45},
                     {27, 29, 37, 48},
                     {32, 33, 39, 50},
                   };

Output:
Elements of matrix in sorted order
10 15 20 25 27 29 30 32 33 35 37 39 40 45 48 5

int[n] rows;
int[n] colPosition;

row=1 , colPosition=2
row=2/3/4 colPosition=1.

----------------------------------------------------------------------------------------------------------------------------------------------------------

Check if edit distance between two strings is one
An edit between two strings is one of the following changes.

Add a character
Delete a character
Change a character
Given two string s1 and s2, find if s1 can be converted to s2 with exactly one edit. Expected time complexity is O(m+n) where m and n are lengths of two strings.

Examples:

Input:  s1 = "geeks", s2 = "geek"
Output: yes
Number of edits is 1

Input:  s1 = "geeks", s2 = "geeks"
Output: no
Number of edits is 0

Input:  s1 = "geaks", s2 = "geeks"
Output: yes
Number of edits is 1

Input:  s1 = "peaks", s2 = "geeks"
Output: no
Number of edits is 2

-------------------------------------

Find the subarray with least average
Given an array arr[] of size n and integer k such that k <= n.

Input:  arr[] = {3, 7, 90, 20, 10, 50, 40}, k = 3
Output: Subarray between indexes 3 and 5
The subarray {20, 10, 50} has the least average 
among all subarrays of size 3.

Input:  arr[] = {3, 7, 5, 20, -10, 0, 12}, k = 2
Output: Subarray between [4, 5] has minimum average